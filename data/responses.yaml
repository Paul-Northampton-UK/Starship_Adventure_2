# Stores lists of response variations for game actions and feedback.
# Placeholders like {item_name}, {direction}, {container_name}, {location_name} 
# will be replaced by the game engine.

# --- Movement ---
move_fail_direction:
  - "You can't go {direction} from here."
  - "There's no exit in that direction ({direction})."
  - "Going {direction} doesn't seem possible right now."
  - "So... you can walk through walls now!"
  - "You attempt to exit {direction} and bang your forehead against the wall!"
  - "Do you think you can go {direction}? I'm willing to try again if you are!"
  - "Nice try, but the {direction} exit leads nowhere!"
  - "I suggest you actually 'read' the available exits first, before attempting to move {direction}!"
  - "You're trying to take a shortcut {direction}, aren't you? Best of luck with that!"
  - "It's not safe to go {direction}. If you make it through, you might end up in space, and in space... 'nobody can hear your scream!'"
  - "I'm really trying to help you here! I display the exits for you and everything! You just don't try do you? Going {direction}?"
  - "You're not quite ready for this game, are you? The lights are on but it appears nobody's home! Trying to go {direction}?"
  - "That way ({direction}) leads to eternal damnation! Personally, I'd take another exit if I were you!"
  - "That {direction} exit only exists in a different dimension! You'd better look for another one."
  - "Computer says 'No' to going {direction}!"
  - "I'm sorry, Dave. I'm afraid I can't let you go {direction}."
  - "Your attempt to navigate this ship {direction} is futile!"
  - "I have a bad feeling about going {direction}... you can't go that way kid!"

move_fail_area:
  - "You can't move to the {target_name} like that."

move_fail_invalid_direction:
  - "You can't go that way."
  - "There's no exit in that direction."

# TODO: Add more specific failure reasons (e.g., locked door)

move_success: # Placeholder - Needs integration with showing room description
  - "You move {direction}."
  - "Okay, moving {direction}."

# Add the missing key needed by handle_move
move_success_description:
  - "{description}" # Display the full location description provided by the handler

# --- Item Handling ---
take_success_singular:
  - "You take the {item_name}."
  - "You pick up the {item_name}."
  - "The {item_name} is now in your hands."

take_success_plural:
  - "You take the {item_name}."
  - "You pick up the {item_name}."
  - "The {item_name} are now in your hands." # Corrected grammar

take_fail_no_item:
  - "You don't see a {item_name} here."
  - "There isn't a {item_name} here to take."

take_fail_not_takeable_singular:
  - "You can't take the {item_name}."
  - "The {item_name} seems fixed in place."

take_fail_not_takeable_plural:
  - "You can't take the {item_name}."
  - "The {item_name} seem fixed in place." # Corrected grammar

take_fail_hands_full:
  - "Your hands are full (holding the {held_item_name}). You need to drop it or put it away first."
  - "You can't take the {item_name} while holding the {held_item_name}."
  - "You'll need free hands to pick up the {item_name}."

drop_success_singular:
  - "You drop the {item_name}."
  - "The {item_name} falls to the floor."
  - "You let go of the {item_name}."

drop_success_plural:
  - "You drop the {item_name}."
  - "The {item_name} fall to the floor." # Corrected grammar
  - "You let go of the {item_name}."

drop_fail_not_holding:
  - "You aren't holding anything to drop."
  - "What do you want to drop? You're not holding {item_name}."

drop_fail_target_mismatch_singular:
    - "You aren't holding the {item_name}. You're holding the {held_item_name}."
    - "You try to drop the {item_name}, but you're actually holding the {held_item_name}."

drop_fail_target_mismatch_plural: # Note: item_name is the target, held_item_name is what's held
    - "You aren't holding the {item_name}. You're holding the {held_item_name}."
    - "You try to drop the {item_name}, but you're actually holding the {held_item_name}."

wear_success_singular:
  - "You put on the {item_name}."
  - "You slip into the {item_name}."
  - "The {item_name} fits well. You're now wearing it."
  - "You equip the {item_name}."

wear_success_plural:
  - "You put on the {item_name}."
  - "You slip into the {item_name}."
  - "The {item_name} fit well. You're now wearing them." # Corrected grammar and typo
  - "You equip the {item_name}."

wear_fail_not_have:
  - "You don't have a {item_name} to wear (checked hands and inventory)."
  - "You can't find a {item_name} to put on."

wear_fail_not_wearable_singular:
  - "You cannot wear the {item_name}."
  - "That {item_name} doesn't seem like something you can wear."

wear_fail_not_wearable_plural:
  - "You cannot wear the {item_name}."
  - "Those {item_name} don't seem like something you can wear."

wear_fail_already_wearing_singular:
  - "You are already wearing the {item_name}."

wear_fail_already_wearing_plural:
  - "You are already wearing the {item_name}."

wear_fail_conflict_singular:
  - "You cannot wear the {item_name} there; you are already wearing the {other_item_name} which occupies that space/layer."
  - "The {other_item_name} you're wearing prevents you from putting on the {item_name}."

wear_fail_conflict_plural:
  - "You cannot wear the {item_name} there; you are already wearing the {other_item_name} which occupies that space/layer."
  - "The {other_item_name} you're wearing prevents you from putting on the {item_name}."

remove_success_singular:
  - "You take off the {item_name} and hold it."
  - "You remove the {item_name}."

remove_success_plural:
  - "You take off the {item_name} and hold them." # Corrected grammar
  - "You remove the {item_name}."

remove_fail_not_wearing:
  - "You aren't wearing a {item_name}."
  - "You check, but you're not wearing a {item_name}."

remove_fail_hands_full_singular:
  - "Your hands are full (holding the {held_item_name}). You need to drop it or put it away before taking off the {item_name}."
  - "You need empty hands to take off the {item_name}."

remove_fail_hands_full_plural:
  - "Your hands are full (holding the {held_item_name}). You need to drop it or put it away before taking off the {item_name}."
  - "You need empty hands to take off the {item_name}."

# --- New Keys for Wearing from Container ---
wear_from_container_success_singular:
  - "You take the {item_name} from the {container_name} and put it on."
  - "After retrieving it from the {container_name}, you equip the {item_name}."
wear_from_container_success_plural:
  - "You take the {item_name} from the {container_name} and put them on."
  - "After retrieving them from the {container_name}, you equip the {item_name}."

# --- Containers (Placeholders) ---
store_success:
  - "You put the {item_name} in the {container_name}."
  - "Stored."

store_fail_not_container:
  - "You can't store things in the {container_name}."

store_fail_container_closed:
  - "The {container_name} is closed."

store_fail_container_full:
  - "The {container_name} is full."
  - "There's no more room in the {container_name}."
  
get_from_success:
   - "You get the {item_name} from the {container_name}."

get_from_fail_not_in_container:
   - "You don't find a {item_name} in the {container_name}."

get_from_fail_container_closed:
   - "You can't get anything from the {container_name} while it's closed."

# Add specific PUT responses (can reuse store_success for now)

# PUT success keys (ensure no stray characters):
# Ensure this is a list with valid strings
put_success_singular:
  - "You put the {item_name} in the {container_name}."
  - "Stored the {item_name} in the {container_name}."
# Define as a list with one item to hopefully fix parsing
put_success_plural:
  - "You put the {item_name} in the {container_name}."
  - "Stored the {item_name} in the {container_name}."

# TODO: Add put_fail_incomplete (for commands missing item/container) and 
#       put_fail_capacity (check container limits).

put_fail_ambiguous: "Which {item_name} do you mean?"
put_fail_container_closed: "You need to open the {container_name} first."
put_fail_not_holding: "You aren't holding anything called '{item_name}'."
put_fail_not_container: "You can't put things inside the {container_name}."
put_fail_container_not_found: "You don't see a {container_name} here to put things in."
put_fail_not_holding_anything:
  - "You aren't holding anything to put away."
  - "Put what away? Your hands are empty."

put_fail_self_insertion: # New key for trying to put an item in itself
  - "Putting the {item_name} into itself? That sounds like a recipe for a spacetime paradox... or maybe just impossible. Let's not try that."
  - "While the {item_name} might contain multitudes, it cannot contain itself. Try putting something *else* in it."
  - "You attempt to fold the {item_name} into its own dimensional pocket. It resists, possibly judging your life choices."
  - "Creating a {item_name}-based black hole is not on today's agenda. Put something else in it."

# --- Look / Examine ---
look_success_room: # Placeholder for detailed room look
  - "{description}"

look_success_item: # Placeholder for detailed item look
  - "{description}"

look_fail_not_found:
  - "You don't see any '{item_name}' here to look at."
  - "There is no '{item_name}' nearby."
  - "Hmm, can't find a '{item_name}' around here."

# --- General / System ---
invalid_command: # Copied from Starship_plan.yaml
  - "I'm sorry, but I have absolutely no idea what you're talking about!"
  - "I've passed that statement through my universal translator and I got nothing!"
  - "Your words are like static in deep space — I can't make any sense of them."
  - "That command defies the laws of physics... and my programming!"
  - "Error: Command not recognized. Perhaps you should try speaking ENGLISH!!"
  - "Your input seems lost in translation — could you rephrase that?"
  - "I'm sorry! What did you just call me?"
  - "What in hell's name have you been smoking!"
  - "That doesn't compute." # Added one more generic

profanity_response: # Responses when player swears (English only)
  - "Do you kiss your mother with that mouth?"
  - "My, what a colourful repertoire you have! Your mother must be so proud!"
  - "Somewhere out there, a tree is tirelessly producing oxygen for you. I think you owe it an apology!"
  - "If only we got a dollar for every bad word, we'd be rich by now!"
  - "Your words just bounced off me and hit the 'I don't care' wall."
  - "I'd give that insult a C-. Creativity counts, you know?"
  - "Oops, your verbal filter must be on vacation."
  - "I'm allergic to negativity. Bless me!"
  - "If this were a battle of wits, I'd feel bad for you. I'm clearly armed." 
  - "Congratulations! You've won the 'Sailor Mouth of the Year' award."
  - "Someday you'll go far—and I really hope you stay there."
  - "Beauty is only skin deep, but ugly goes clean to the bone."
  - "Oh, I'm sorry. Did the middle of my sentence interrupt the beginning of yours?"
  - "You bring everyone a lot of joy... when you leave the room."
  - "I believe in lifting people, not tearing them down. Let's find a way to understand each other."

error_internal:
  - "Sorry, an internal error occurred ({action}). Please report this."
  - "Something went wrong behind the scenes ({action}). Maybe try something else?"

error_generic:
  - "Something unexpected went wrong with that action."
  - "An error occurred processing your command."

# --- New Keys for TAKE_FROM Intent ---
take_from_success_singular:
  - "You take the {item_name} from the {container_name}."
  - "You retrieve the {item_name} from the {container_name}."

take_from_success_plural:
  - "You take the {item_name} from the {container_name}."
  - "You retrieve the {item_name} from the {container_name}."

take_from_fail_container_not_found:
  - "You don't see a {container_name} here to take things from."
  - "What {container_name}? There isn't one here."

take_from_fail_item_not_found:
  - "You look inside the {container_name}, but don't find a {item_name} there."
  - "The {item_name} isn't in the {container_name}."

take_from_fail_container_closed:
  - "You can't take things from the {container_name} while it's closed."
  - "The {container_name} needs to be opened first."

take_from_fail_hands_full:
  - "You can't take the {item_name}; your hands are already full (holding the {held_item_name})."
  - "You'll need a free hand to take the {item_name} from the {container_name}."

# --- Lock / Unlock --- 

unlock_success:
  - "Click! You unlock the {target} with the {key_name}."
  - "The {target} lock yields to the {key_name}. It's unlocked."
  - "Using the {key_name}, you manage to unlock the {target}."
  # Case for no key required/used
  - "Click! The {target} unlocks."
  - "You successfully unlock the {target}."

unlock_fail_no_key:
  - "You need to specify which key to use on the {target}. (e.g., unlock {target} with keycard)"
  - "That {target} requires a key to unlock. Which one do you want to use?"

unlock_fail_wrong_key:
  - "The {key_name} doesn't seem to fit the {target}'s lock."
  - "You try the {key_name}, but it doesn't unlock the {target}."
  - "That's the wrong key for the {target}."

unlock_fail_not_locked:
  - "The {target} is already unlocked."
  - "You check the {target}, but it isn't locked."

unlock_fail_not_lockable:
  - "You can't lock or unlock the {target}. It doesn't seem to have a lock."
  - "The {target} doesn't appear to be lockable."

unlock_fail_target_not_found:
  - "You don't see a {target} here to unlock."
  - "What {target}? There isn't one around here."

unlock_fail_key_not_found:
  - "You don't seem to have the {key_name} on you right now."
  - "You check your hands and worn items, but can't find the {key_name}."

lock_success:
  - "Click! You lock the {target} with the {key_name}."
  - "You turn the {key_name} and the {target}'s lock engages."
  - "The {target} is now securely locked with the {key_name}."
  # Case for no key required/used
  - "Click! The {target} locks."
  - "You successfully lock the {target}."

lock_fail_no_key:
  - "You need to specify which key to use to lock the {target}."
  - "What do you want to lock the {target} with?"

lock_fail_wrong_key:
  - "The {key_name} doesn't seem to work with the {target}'s lock."
  - "You try the {key_name}, but it won't lock the {target}."
  - "That's the wrong key to lock the {target}."

lock_fail_already_locked:
  - "The {target} is already locked."
  - "You check the {target}; it's securely locked."

lock_fail_not_lockable: # Can reuse the unlock message key
  - "You can't lock or unlock the {target}. It doesn't seem to have a lock."
  - "The {target} doesn't appear to be lockable."

lock_fail_target_not_found: # Can reuse the unlock message key
  - "You don't see a {target} here to lock."
  - "What {target}? There isn't one around here."

lock_fail_key_not_found: # Can reuse the unlock message key
  - "You don't seem to have the {key_name} on you right now."
  - "You check your hands and worn items, but can't find the {key_name}."

# Search Command Responses
search_success_hidden_item_found:
  - "Searching the {target_name}, you discover a {item_name}!"
  - "Your search of the {target_name} reveals a hidden {item_name}."
search_fail_nothing_hidden:
  - "You search the {target_name} carefully, but find nothing hidden."
  - "Despite your efforts, searching the {target_name} yields nothing new."
search_fail_target_not_found:
  - "You search around but don't see any '{target_name}' here."

# --- Inventory Display ---
inventory_display:
  - "{inventory_text}" # Simple key to just display the formatted text

# Adding new keys here, ensuring no duplicates from above
search_reveal_keycard_bed: # Specific for bed puzzle - reveals item
  - "Searching the bunk, you move the pillow aside and reveal a Blue Keycard lying there!"
